class AddPaymentMethodToOrderLineItems < ActiveRecord::Migration
  def self.up
    add_column :order_line_items, :payment_method, :string, :limit => 32
    
    # update all OrderLineItems's payment_method
    OrderLineItem.update_all "payment_method = 'deposit'"
    buy_now_products_id = Product.find(:all, :conditions => "accept_deposit = false AND accept_buy_now = true").map(&:id)
    OrderLineItem.find(:all).each do |line_item|
      line_item.update_attribute(:payment_method, 'buy_now') if buy_now_products_id.include? line_item.product_id
    end
        
    add_column :products, :buy_now_require_redone, :boolean, :null => false, :default => true
    # update all exists product's buy_now_require_redone attributes
    Product.find_all_by_erp_product_item(Product::PAID_TODAY_ERP_PRODUCT_ITEMS).each { |product| product.update_attributes(:buy_now_require_redone => false) }
    # update all exists product's shipping_points
    Product.find(:all).each do |product|
      if ax_item = AxInventory.find_by_item_id(product.erp_product_item)
        product.update_attribute(:shipping_points, ax_item.shipping_points) 
        #else
        #open("item_missing.log", 'a+') {|f| f << "##{product.id} #{product.erp_product_item}\n" }
      end
    end
    
    add_column :countries, :fedex_zone, :string, :null => false, :default => "", :limit => 16

    create_table :delivery_modes do |t|
      t.column :code, :string
      t.column :description, :text
    end
    
    create_table :product_shipping_rates do |t|
      t.column :shipping_zone, :string, :null => false, :default => "", :limit => 16
      t.column :code,          :string, :null => false, :default => "", :limit => 16
      t.column :min_points,    'decimal(10,1)',  :null => false, :default => 0
      t.column :max_points,    'decimal(10,1)',  :null => false, :default => 0
      t.column :retail_price,  :float,  :null => false, :default => 0
      t.column :created_at,    :datetime
      t.column :updated_at,    :datetime
    end
    
    AxShippingRate.find(:all).each do |ax_rate|
      attrs = ax_rate.attributes
      attrs.delete_if {|key,value| key == 'id' || key == 'status' || key == 'updated_at'}
      ProductShippingRate.create(attrs)
    end
    
    # fill data into the tables.
    execute %(TRUNCATE countries)
    execute %(INSERT INTO countries VALUES (1,"United States of America","US","001",4987,"U"),(2,"Canada","CA","034",121,"B"),(3,"United Kingdom","GB","073",151,"D"),(4,"Australia","AU","012",128,"J"),(5,"India","IN","087",58,"O"),(6,"Afghanistan","AF","002",1,"O"),(7,"Albania","AL","003",2,"M"),(8,"Algeria","DZ","004",2,"M"),(9,"Andorra","AD","005",2,"H"),(10,"Angola","AO","006",0,"M"),(11,"Anguilla","AI","007",0,"I"),(12,"Antigua & Barbuda","AG","008",0,"I"),(13,"Argentina","AR","009",0,"M"),(14,"Aruba","AW","010",0,"I"),(15,"Ascension",NULL,"011",0,""),(16,"Austria","AT","013",0,"H"),(17,"Azores",NULL,"014",2,""),(18,"Bahamas","BS","015",1,"I"),(19,"Bahrain","BH","016",0,"J"),(20,"Bangladesh","BD","017",0,"O"),(21,"Barbados","BB","018",0,"I"),(22,"Belgium","BE","019",0,"D"),(23,"Belize","BZ","020",0,"K"),(24,"Benin","BJ","021",0,"M"),(25,"Bermuda","BM","022",0,"I"),(26,"Bhutan","BT","023",0,"O"),(27,"Bolivia","BO","024",0,"L"),(28,"Botswana","BW","025",0,"M"),(29,"Brazil","BR","026",4,"L"),(30,"British Virgin Islands","VG","027",0,""),(31,"Brunei","BN","028",0,"J"),(32,"Bulgaria","BG","029",0,"M"),(33,"Burkina Faso","BF","030",0,"M"),(34,"Burma","MM","031",0,""),(35,"Burundi","BI","032",0,"M"),(36,"Cameroon","CM","033",0,"M"),(37,"Cape Verde","CV","035",0,"M"),(38,"Cayman Islands","KY","036",0,"I"),(39,"Central African Republic","CF","037",0,"M"),(40,"Chad","TD","038",0,"M"),(41,"Chile","CL","039",0,"L"),(42,"China","CN","040",3,"N"),(43,"Columbia","CO","041",0,"L"),(44,"Comoros","KM","042",0,""),(45,"Congo","CG","043",0,"M"),(46,"Corsica",NULL,"044",0,""),(47,"Costa Rica","CR","045",0,"K"),(48,"Cote d\'Ivoire","CI","046",0,"M"),(49,"Cuba","CU","047",0,""),(50,"Cyprus","CY","048",0,"J"),(51,"Czech Republic","CZ","049",4,"M"),(52,"Denmark","DK","050",16,"H"),(53,"Djibouti","DJ","051",0,"M"),(54,"Dominica","DM","052",0,"I"),(55,"Dominican Republic","DO","053",1,"I"),(56,"East Timor","TL","054",0,""),(57,"Ecuador","EC","055",0,"L"),(58,"Egypt","EG","056",1,"J"),(59,"El Salvador","SV","057",2,"K"),(60,"Equatorial Guinea","GQ","058",0,"M"),(61,"Estonia","EE","059",0,"M"),(62,"Ethiopia","ET","060",0,"M"),(63,"Falkland Islands","FK","061",0,""),(64,"Faroe Islands","FO","062",0,"H"),(65,"Fiji","FJ","063",0,"K"),(66,"Finland","FI","064",4,"H"),(67,"France","FR","065",6,"D"),(68,"French Guiana","GF","066",0,"L"),(69,"French Polynesia","PF","067",0,"M"),(70,"Gabon","GA","068",0,"M"),(71,"Gambia","GM","069",0,"M"),(72,"Germany","DE","070",10,"E"),(73,"Ghana","GH","071",0,"M"),(74,"Gibraltar","GI","072",0,"M"),(75,"Greece","GR","074",4,"H"),(76,"Greenland","GL","075",0,"H"),(77,"Grenada","GD","076",0,"I"),(78,"Guadeloupe","GP","077",1,"I"),(79,"Guatemala","GT","078",0,"K"),(80,"Guinea","GN","079",0,"M"),(81,"Guinea-Bissau","GW","080",0,"M"),(82,"Guyana","GY","081",0,"L"),(83,"Haiti","HT","082",0,"I"),(84,"Honduras","HN","083",0,"K"),(85,"Hong Kong","HK","084",21,"F"),(86,"Hungary","HU","085",2,"M"),(87,"Iceland","IS","086",0,"H"),(88,"Indonesia","ID","088",2,"J"),(89,"Iran","IR","089",0,""),(90,"Iraq","IQ","090",0,"O"),(91,"Ireland","IE","091",21,"D"),(92,"Israel","IL","092",6,"J"),(93,"Italy","IT","093",6,"E"),(94,"Jamaica","JM","094",2,"I"),(95,"Japan","JP","095",6,"G"),(96,"Jordan","JO","096",0,"J"),(97,"Kampuchea",NULL,"097",0,""),(98,"Kenya","KE","098",0,"M"),(99,"Kiribati","KI","099",0,""),(100,"Korea, Democ. Peoples Rep.",NULL,"100",1,""),(101,"Kuwait","KW","101",36,"J"),(102,"Laos","LA","102",0,"K"),(103,"Latvia","LV","103",0,"M"),(104,"Lebanon","LB","104",2,"J"),(105,"Lesotho","LS","105",0,"M"),(106,"Liberia","LR","106",0,"M"),(107,"Libya","LY","107",0,"M"),(108,"Liechtenstein","LI","108",0,"H"),(109,"Lithuania","LT","109",0,"M"),(110,"Luxembourg","LU","110",0,"D"),(111,"Macao","MO","111",0,"F"),(112,"Madagascar","MG","112",0,"M"),(113,"Madeira Islands",NULL,"113",0,""),(114,"Malawi","MW","114",0,"M"),(115,"Malaysia","MY","115",10,"J"),(116,"Maldives","MV","116",0,"O"),(117,"Mali","ML","117",0,"M"),(118,"Malta","MT","118",6,"H"),(119,"Martinique","MQ","119",0,"I"),(120,"Mauritania","MR","120",0,"M"),(121,"Mauritius","MU","121",0,"M"),(122,"Mexico","MX","122",7,"C"),(123,"Monaco","MC","123",0,"D"),(124,"Mongolia","MN","124",2,"M"),(125,"Montserrat","MS","125",0,"I"),(126,"Morocco","MA","126",0,"M"),(127,"Mozambique","MZ","127",0,"M"),(128,"Nauru","NR","128",0,""),(129,"Nepal","NP","129",2,"O"),(130,"Netherlands","NL","130",3,"D"),(131,"Netherlands Antilies","AN","131",0,"I"),(132,"New Caledonia","NC","132",0,"K"),(133,"New Zealand","NZ","133",8,"J"),(134,"Nicaragua","NI","134",0,"K"),(135,"Niger","NE","135",0,"M"),(136,"Nigeria","NG","136",3,"M"),(137,"Norway","NO","137",2,"H"),(138,"Oman","OM","138",0,"J"),(139,"Pakistan","PK","139",2,"O"),(140,"Panama","PA","140",0,"K"),(141,"Papua New Guinea","PG","141",0,"K"),(142,"Paraguay","PY","142",0,"L"),(143,"Peru","PE","143",0,"L"),(144,"Philippines","PH","144",1,"J"),(145,"Pitcairn Islands","PN","145",0,""),(146,"Poland","PL","146",0,"M"),(147,"Portugal","PT","147",0,"H"),(148,"Qatar","QA","148",0,"J"),(149,"Reunion Island","RE","149",0,"M"),(150,"Romania","RO","150",0,"M"),(151,"Russia","RU","151",2,"M"),(152,"Rwanda","RW","152",0,"M"),(153,"St. Christopher & Nevis","KN","153",0,"I"),(154,"Saint Helena","SH","154",0,""),(155,"Saint Lucia","LC","155",0,"I"),(156,"Saint Pierre & Miquelon","PM","156",0,""),(157,"St. Vincent&The Grenadines","VC","157",0,"I"),(158,"San Marino","SM","158",0,"E"),(159,"Sao Tome & Principe","ST","159",0,""),(160,"Saudi Arabia","SA","160",4,"M"),(161,"Senegal","SN","161",2,"M"),(162,"Seychelles","SC","162",0,"M"),(163,"Sierra Leone","SL","163",0,"M"),(164,"Singapore","SG","164",9,"F"),(165,"Solomon Islands","SB","165",0,""),(166,"Somalia","SO","166",0,""),(167,"South Africa","ZA","167",10,"M"),(168,"Spain","ES","168",8,"H"),(169,"Sri Lanka","LK","169",0,"O"),(170,"Sudan","SD","170",0,""),(171,"Suriname","SR","171",0,"L"),(172,"Swaziland","SZ","172",0,"M"),(173,"Sweden","SE","173",13,"H"),(174,"Switzerland","CH","174",0,"H"),(175,"Syria","SY","175",0,"J"),(176,"Taiwan","TW","176",2,"F"),(177,"Tanzania","TZ","177",0,"M"),(178,"Thailand","TH","178",0,"J"),(179,"Togo","TG","179",0,"M"),(180,"Tonga","TO","180",0,""),(181,"Trinidad and Tobago","TT","181",0,"I"),(182,"Tristan da Cunha",NULL,"182",0,""),(183,"Tunisia","TN","183",0,"M"),(184,"Turkey","TR","184",0,"J"),(185,"Turks & Caicos Islands","TC","185",0,"I"),(186,"Tuvalu","TV","186",0,""),(187,"Wallis & Futuna Islands","WF","187",0,"M"),(188,"Western Samoa","WS","188",0,"M"),(189,"U.S.S.R",NULL,"189",0,""),(190,"Uganda","UG","190",0,"M"),(191,"United Arab Emirates","AE","191",14,"J"),(192,"Uruguay","UY","192",2,"L"),(193,"Vanuatu","VU","193",0,"K"),(194,"Vatican City","VA","194",0,""),(195,"Venezuela","VE","195",0,"L"),(196,"Vietnam","VN","196",0,"J"),(197,"Yemen","YE","197",0,"J"),(198,"Yugoslavia",NULL,"198",0,""),(199,"Zaire",NULL,"199",0,""),(200,"Zambia","ZM","200",0,"M"),(201,"Zimbabwe","ZW","201",0,"M"),(202,"South Korea","KR","202",0,""),(203,"Armenia","AM","225",0,"M"),(204,"Azerbaijan","AZ","226",0,"M"),(205,"Byelorussia (Belarus)","BY","227",0,"M"),(206,"Georgia, Republic Of","GE","229",0,"M"),(207,"Kazakhstan","KZ","230",0,"M"),(208,"Kyrgyzstan","KG","231",0,"M"),(209,"La Luia",NULL,"232",0,""),(210,"Lithvania",NULL,"233",0,""),(211,"MocDavia",NULL,"234",0,""),(212,"Tadzhikistan",NULL,"235",0,""),(213,"Turkmenistan","TM","236",0,"M"),(214,"Ukraine","UA","237",0,"M"),(215,"Uzbekistan","UZ","238",0,"M"),(216,"Bosnia (Hercgovina)","BA","239",0,"M"),(217,"Croatia","HR","240",0,""),(218,"Serbia","RS","241",0,"D"),(219,"Macedonia","MK","242",0,"M"),(220,"Slovenia","SI","243",0,"M"),(221,"Slovak Republic","SK","244",0,"M"),(222,"Czech Republic","CZ","245",0,""),(223,"Scotland","GB","246",2,""),(224,"Canary Islands","ES","247",0,""),(225,"British Forces Post Office",NULL,"280",1,""),(226,"American Samoa","AS","248",0,"M"),(227,"Antarctica","AQ","249",0,""),(228,"Bouvet Island","BV","250",0,""),(229,"British Indian Ocean Terri","IO","251",0,""),(230,"Cambodia","KH","252",0,"K"),(231,"Christmas Island","CX","253",0,""),(232,"Cocos (keeling) Islands","CC","254",0,""),(233,"Eritrea","ER","257",0,"M"),(234,"France, Metropolitan","FR","258",0,""),(235,"French Southern Territorie","TF","259",0,""),(236,"Guam","GU","260",0,"K"),(237,"Heard And Mc Donald Island","HM","261",0,""),(238,"Korea, Democratic People\'s",NULL,"301",0,""),(239,"Marshall Islands","MH","262",0,"M"),(240,"Mayotte","YT","263",0,""),(241,"Micronesia","FM","304",0,"M"),(242,"Moldova","MD","265",0,"M"),(243,"Myanmar","MM","266",0,""),(244,"Namibia","NA","267",0,"M"),(245,"Niue","NU","268",0,""),(246,"Norfolk Island","NF","305",0,""),(247,"Northern Mariana Islands","MP","306",0,""),(248,"Palau","PW","271",0,"M"),(249,"Puerto Rico","US","272",0,""),(250,"South Georgia And The Sout","GS","310",0,""),(251,"Svalbard And Jan Mayen Isl","SJ","311",0,""),(252,"Tajikistan","TJ","275",0,""),(253,"Tokelau","TK","276",0,""),(255,"U.S. Virgin Islands","VI","278",0,"I"),(256,"Western Sahara",NULL,"279",0,""),(257,"Congo, The Democratic Republic","CD","300",0,"M"),(258,"Lao People\'s Democratic Republic",NULL,"302",0,""),(259,"Macedonia, The Former Yugo","MK","303",0,""),(260,"Palestine","PS","307",0,"J"),(261,"Saint Vincent","VC","308",0,""),(262,"Slovakia Republic","SK","309",0,""),(263,"Taiwan, Province Of China","TW","312",0,""),(264,"United Kingdom","GB","",0,""),(265,"Montenegro","ME",NULL,0,"D"))
    execute %(TRUNCATE delivery_modes)
    execute %(INSERT INTO delivery_modes VALUES (1,'BestWay','Best Way'),(2,'DHL','DHL'),(3,'Fdx2DA','FedEx Second Day Air'),(4,'FdxGR','FedEx Ground'),(5,'FdxIE','FedEx International Economy'),(6,'FdxIP','FedEx International Priority'),(7,'FdxNDA','FedEx Standard Overnight'),(8,'FdxP','FedEx Priority Overnight'),(9,'FdxSAT','FedEx Saturday Delivery'),(10,'UPS2DA','UPS Second Day Air (Blue)'),(11,'UPS3DA','UPS Three Day Air (Orange)'),(12,'UPSGR','UPS Ground'),(13,'UPSNDA','UPS Next Day Air (Red)'),(14,'USPS','First Class mail'),(15,'WC','Will Call'),(16,'FdxCAGr','FedEx Ground Canada'))
  end

  def self.down
    remove_column :order_line_items, :payment_method
    remove_column :products, :buy_now_require_redone
    remove_column :countries, :fedex_zone
    drop_table :delivery_modes
    drop_table :product_shipping_rates
  end
end

